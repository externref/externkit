name: Build and Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install maturin
      run: pip install maturin

    - name: Build wheels
      run: maturin build --release --out dist

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}
        path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Download all wheels
      uses: actions/download-artifact@v3
      with:
        path: dist/

    - name: Flatten wheels directory
      run: |
        mkdir -p wheels
        find dist/ -name "*.whl" -exec cp {} wheels/ \;
        find dist/ -name "*.tar.gz" -exec cp {} wheels/ \;
        ls -la wheels/

    - name: Publish to PyPI
      uses: PyO3/maturin-action@v1
      with:
        command: upload
        args: --skip-existing wheels/*
      env:
        MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
